---
- name: Install Mysql
  package:
    name: "{{ item }}"
    state: present
    update_cache: yes
  with_items:
    - "{{ mysql_packages }}"

- name: start and enable mysql service
  service:
     name: mysql
     state: started
     enabled: yes

- name: Remove all anonymous user accounts
  mysql_user:
    name: ''
    host_all: yes
    state: absent

- name: Remove the MySQL test database
  mysql_db:
    name: test
    state: absent

- name: create db
  mysql_db:
     name: "{{ db_name }}"
     state: present

- name: create mysql user
  mysql_user:
     name: "{{ db_user }}"
     password: "{{ db_pass }}"
     priv: "{{ db_name }}.*:ALL"
     host: '%'
     state: present

- name: Enable remote login to mysql
  lineinfile:
     path: /etc/mysql/mysql.conf.d/mysqld.cnf
     regexp: '^bind-address'
     line: 'bind-address = 0.0.0.0'
     backup: yes

- name: restart mysql
  systemd:
    name: mysql
    state: restarted
    enabled: yes
    daemon_reload: yes

#

- name: Replace master.cnf
  template:
    src=templates/master.cnf
    dest=/etc/mysql/mysql.conf.d/master.cnf
  when:
    - mysql_replication_role == 'master'
    - mysql_replication_user is defined
    - (mysql_replication_master | length) > 0

- name: restart mysql
  systemd:
    name: mysql
    state: restarted
    enabled: yes
    daemon_reload: yes

- name: Replace slave.cnf
  template:
    src=templates/slave.cnf
    dest=/etc/mysql/mysql.conf.d/slave.cnf
  when:
    - mysql_replication_role == 'slave'
    - (mysql_replication_master | length) > 0

- name: restart mysql
  systemd:
    name: mysql
    state: restarted
    enabled: yes
    daemon_reload: yes

- name: Ensure replication user exists on master.
  mysql_user:
    name: "{{ mysql_replication_user }}"
    host: "%"
    password: "{{ mysql_replication_user_password }}"
    priv: "*.*:REPLICATION SLAVE,REPLICATION CLIENT"
    state: present
  when:
    - mysql_replication_role == 'master'
    - mysql_replication_user is defined
    - (mysql_replication_master | length) > 0

- name: check slave replication status
  mysql_replication:
    mode: getreplica
  register: slave
  when:
    - mysql_replication_role == 'slave'
    - (mysql_replication_master | length) > 0

- name: check master replication status
  mysql_replication:
    mode=getprimary
  delegate_to: "{{ mysql_replication_master }}"
  register: master
  when:
    - (slave.Is_Replica is defined and not slave.Is_Replica) or (slave.Is_Replica is not defined and slave is failed)
    - mysql_replication_role == 'slave'
    - (mysql_replication_master | length) > 0

- name: configure replication on the slave
  mysql_replication:
    mode: changeprimary
    primary_host: "{{ mysql_replication_master }}"
    primary_user: "{{ mysql_replication_user }}"
    primary_password: "{{ mysql_replication_user_password }}"
    primary_log_file: "{{ master.File }}"
    primary_log_pos: "{{ master.Position }}"
  when:
    - (slave.Is_Replica is defined and not slave.Is_Replica) or (slave.Is_Replica is not defined and slave is failed)
    - mysql_replication_role == 'slave'
    - mysql_replication_user is defined
    - (mysql_replication_master | length) > 0

- name: Start replica
  mysql_replication:
    mode: startreplica

- name: restart mysql
  systemd:
    name: mysql
    state: restarted
    enabled: yes
    daemon_reload: yes
